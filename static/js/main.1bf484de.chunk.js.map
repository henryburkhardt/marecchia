{"version":3,"sources":["components/Election/DOS.png","components/Opinion/index.js","components/Header/index.js","components/Navbar/index.js","components/Hero/index.js","containers/About/index.js","components/DailyDan/index.js","components/Election/index.js","components/Mardle/index.js","pages/404.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","i","Header","props","Nav","class","className","to","React","Component","Hero","href","About","opinions","blogPost","length","blogCategory","push","DailyDan","index","Math","floor","random","dan","data","Election","src","require","width","style","display","alt","Mardle","PageNotFound","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.1bf484de.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/DOS.8ca0cab6.png\";","import React, { useState, useEffect } from \"react\";\r\nimport blogPost from \"../../data/blog.json\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\n/**\r\n * @author\r\n * @function Opinion\r\n **/\r\nlet opinions = [];\r\nfor (let i; i < blogPost.length; i++) {\r\n  if (blogPost[i].blogCategory === \"Opinion\") {\r\n    opinions.push(blogPost[i]);\r\n  }\r\n}\r\n\r\nconst Opinion = (props) => {\r\n  const [posts, setPosts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const posts = blogPost.data;\r\n    setPosts(posts);\r\n  }, posts);\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      {posts.map((post) => {\r\n        return (\r\n          <div className=\"col-md-3\">\r\n            <img\r\n              src={post.blogImage}\r\n              style={{ width: \"100%\", height: \"60.667%\", objectFit: \"cover\" }}\r\n            />\r\n\r\n            <p className=\"lead2\">\r\n              <NavLink key={post.id} to={`/post/${post.id}`}>\r\n                {\" \"}\r\n                <div className=\"post-author2\">\r\n                  <span className={post.blogCategory}>{post.blogCategory}</span>\r\n                  {post.author}\r\n                </div>\r\n                <div className=\"post-title2\">{post.blogTitle}</div>{\" \"}\r\n              </NavLink>\r\n            </p>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Opinion;\r\n","import React from \"react\";\r\n\r\n/**\r\n * @author\r\n * @function Header\r\n **/\r\n\r\nconst Header = (props) => {\r\n  return <></>;\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class Nav extends React.Component {\r\n  render() {\r\n    return (\r\n      <div class=\"topnav\">\r\n        <Link className=\" link\" to=\"/\">\r\n          Home\r\n        </Link>\r\n        <Link to=\"/opinion\" className=\"link\">\r\n          Opinion\r\n        </Link>\r\n        <Link to=\"/feature\" className=\"link\">\r\n          Feature\r\n        </Link>\r\n        <Link to=\"/dailydan\" className=\"link\">\r\n          Daily Dan\r\n        </Link>\r\n        <Link to=\"/campaigncoverage\" className=\"link\">\r\n          Campaign Coverage\r\n        </Link>\r\n        <Link to=\"/monotracker\" className=\"link\">\r\n          Mono Tracker\r\n        </Link>\r\n        <Link to=\"/mardle\" className=\"link\">\r\n          Mardle\r\n        </Link>\r\n        <Link to=\"/about\" className=\"link\">\r\n          About\r\n        </Link>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport Nav from \"../Navbar\";\r\n\r\n/**\r\n * @author\r\n * @function Hero\r\n **/\r\n\r\nconst Hero = (props) => {\r\n  return (\r\n    <div className=\"hero-image\">\r\n      <div className=\"content\">\r\n        <a href=\"/\">\r\n          <span className=\"title\">the Marecchia</span>\r\n        </a>\r\n        <span>Saint Paul Academy's second most respected news source.</span>\r\n      </div>\r\n      <Nav />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Hero;\r\n","import React from \"react\";\r\n\r\n/**\r\n * @author\r\n * @function About\r\n **/\r\n\r\nconst About = (props) => {\r\n  return (\r\n    <>\r\n      <div>About</div>\r\n      <div className=\"blog-post-text\">\r\n        {\" \"}\r\n        The Marecchia is grassroots journalism initiative founded locally in\r\n        Saint Paul by two concerned citizens, with a deep appreciation for the\r\n        first amendment. Originally conceived in late 2021, the project\r\n        officially launch in 2022 amidst questionable coverage of unnamed\r\n        student projects from pre existing journalism organizations.\r\n      </div>\r\n      <div className=\"blog-post-text\">\r\n        \"What a waste it is to lose one's mind. Or not to have a mind is being\r\n        very wasteful. How true that is.”\r\n      </div>\r\n      <div className=\"blog-post-text\">\r\n        The Marecchia was founded off this one simple principle, presented by\r\n        former Vice President Dan Quayle in 1989. The mind is the most powerful\r\n        tool known to man, and we feel that our topmost responsibly is to put it\r\n        good use. How true that is.\r\n      </div>\r\n      <div className=\"blog-post-text\">\r\n        People often ask us about our reputability to which we respond with\r\n        three simple words:\r\n      </div>\r\n      <div className=\"blog-post-text\">Just trust us.</div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import data from \"./dan.json\";\r\nimport React, { Component } from \"react\";\r\nclass DailyDan extends Component {\r\n  render() {\r\n    let index = Math.floor(Math.random() * 32);\r\n    let dan = data.data[index];\r\n\r\n    return (\r\n      <div className=\"dan\">\r\n        <h1>The Daily Dan</h1>\r\n        <h3 className=\"blog-post-text\">{dan}</h3>\r\n        <h4 className=\"blog-post-text\">-Dan Quayle</h4>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DailyDan;\r\n","import React, { Component } from \"react\";\r\nclass Election extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"election\">\r\n        <h1>Live Election Coverage (starting April 1)</h1>\r\n        <img\r\n          src={require(\"./DOS.png\")}\r\n          width=\"50%\"\r\n          style={{ display: \"block\" }}\r\n          alt=\"Can't Load Image\"\r\n        ></img>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Election;\r\n","import React, { Component } from \"react\";\r\nclass Mardle extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"dan\">\r\n        <iframe\r\n          src=\"https://henryburkhardt.github.io/spartle/#/mardle\"\r\n          className=\"iframe\"\r\n        ></iframe>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Mardle;\r\n","import React from \"react\";\r\n\r\n\r\nconst PageNotFound = () => {\r\n    return(\r\n\r\n        <div>\r\n            <h1>404</h1>\r\n            <p className=\"lead\">Page not found</p>\r\n            <a href=\"/\">&larr; Επιστροφή</a>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport  default PageNotFound;","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport Header from \"./components/Header\";\r\nimport Hero from \"./components/Hero\";\r\nimport About from \"./containers/About\";\r\nimport Post from \"./containers/Post\";\r\nimport Opinion from \"./components/Opinion\";\r\nimport AllPosts from \"./components/AllPosts\";\r\nimport DailyDan from \"./components/DailyDan\";\r\nimport Election from \"./components/Election\";\r\nimport Mardle from \"./components/Mardle\";\r\nimport {\r\n  HashRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\n\r\nimport MainPage from \"./pages\";\r\nimport PageNotFound from \"./pages/404\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <div className=\"App\">\r\n          <Header />\r\n          <Hero />\r\n\r\n          <div className=\"container\">\r\n            <Switch>\r\n              <Route exact path=\"/\" component={About} />\r\n              <Route path=\"/about\" component={About} />\r\n              <Route exact path=\"/post/:postId\" component={About} />\r\n              <Route exact path=\"/feature\" component={About} />\r\n              <Route exact path=\"/monotracker\" component={About} />\r\n              <Route exact path=\"/opinion\" component={About} />\r\n              <Route exact path=\"/dailydan\" component={DailyDan} />\r\n              <Route exact path=\"/campaigncoverage\" component={Election} />\r\n              <Route exact path=\"/mardle\" component={Mardle} />\r\n\r\n              <Route component={PageNotFound} />\r\n            </Switch>\r\n          </div>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}