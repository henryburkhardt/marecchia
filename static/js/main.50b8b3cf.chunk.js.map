{"version":3,"sources":["components/MonoTracker/monoTracker.mp4","components/Election/DOS.png","components/Opinion/index.js","components/Navbar/index.js","components/Hero/index.js","containers/About/index.js","components/BlogPost/index.js","components/Sidebar/index.js","containers/Post/index.js","components/AllPosts/index.js","components/DailyDan/index.js","components/Election/index.js","components/Mardle/index.js","components/MonoTracker/index.js","components/Disclaimer/index.js","pages/index.jsx","pages/404.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","i","Nav","class","className","to","React","Component","Hero","props","href","target","About","BlogPost","useState","post","setPost","setPostId","useEffect","postId","match","params","blogPost","data","find","id","blogImage","blogTitle","author","blogCategory","src","style","width","title","imageCredit","blogText","postedOn","Sidebar","posts","setPosts","map","key","Post","height","overflow","opinions","length","push","AllPosts","objectFit","DailyDan","index","Math","floor","random","dan","Election","require","display","alt","Mardle","MonoTracker","autoPlay","loop","muted","monoVid","type","Disclaimer","MainPage","PageNotFound","ReactGA","initialize","App","contents","window","location","pathname","search","pageview","exact","path","component","Boolean","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.50b8b3cf.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/monoTracker.45de1c52.mp4\";","module.exports = __webpack_public_path__ + \"static/media/DOS.8ca0cab6.png\";","import React, { useState, useEffect } from \"react\";\r\nimport blogPost from \"../../data/blog.json\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\n/**\r\n * @author\r\n * @function Opinion\r\n **/\r\nlet opinions = [];\r\nfor (let i; i < blogPost.length; i++) {\r\n  if (blogPost[i].blogCategory === \"Opinion\") {\r\n    opinions.push(blogPost[i]);\r\n  }\r\n}\r\n\r\nconst Opinion = (props) => {\r\n  const [posts, setPosts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const posts = blogPost.data;\r\n    setPosts(posts);\r\n  }, posts);\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      {posts.map((post) => {\r\n        return (\r\n          <div className=\"col-md-3\">\r\n            <img\r\n              src={post.blogImage}\r\n              style={{ width: \"100%\", height: \"60.667%\", objectFit: \"cover\" }}\r\n            />\r\n\r\n            <p className=\"lead2\">\r\n              <NavLink key={post.id} to={`/post/${post.id}`}>\r\n                {\" \"}\r\n                <div className=\"post-author2\">\r\n                  <span className={post.blogCategory}>{post.blogCategory}</span>\r\n                  {post.author}\r\n                </div>\r\n                <div className=\"post-title2\">{post.blogTitle}</div>{\" \"}\r\n              </NavLink>\r\n            </p>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Opinion;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class Nav extends React.Component {\r\n  render() {\r\n    return (\r\n      <div class=\"topnav\">\r\n        <Link className=\" link\" to=\"/\">\r\n          Home\r\n        </Link>\r\n        <Link to=\"/electioncoverage\" className=\"link\">\r\n          Election Coverage\r\n        </Link>\r\n        {/* <Link to=\"/opinion\" className=\"link\">\r\n          Opinion\r\n        </Link>\r\n        <Link to=\"/feature\" className=\"link\">\r\n          Feature\r\n        </Link> */}\r\n        <Link to=\"/dailydan\" className=\"link\">\r\n          Daily Dan\r\n        </Link>\r\n        <Link to=\"/monotracker\" className=\"link\">\r\n          Mono Tracker\r\n        </Link>\r\n        {/* <Link to=\"/mardle\" className=\"link\">\r\n          Mardle\r\n        </Link> */}\r\n        <Link to=\"/about\" className=\"link\">\r\n          About\r\n        </Link>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport Nav from \"../Navbar\";\r\n\r\n/**\r\n * @author\r\n * @function Hero\r\n **/\r\n\r\nconst Hero = (props) => {\r\n  return (\r\n    <div className=\"hero-image\">\r\n      <div className=\"content\">\r\n        <a href=\"/\">\r\n          <span className=\"title\">the Marecchia</span>\r\n        </a>\r\n        <div class=\"subtitle\">\r\n          Saint Paul Academy's second most respected news source.\r\n        </div>\r\n        <div className=\"topHeader\">\r\n          <p>\r\n            <a href=\"mailto:themarecchia@gmail.com\">themarecchia@gmail.com</a>\r\n            {\" /\"}\r\n            <a href=\"https://www.instagram.com/marecchia_news/\" target=\"_blank\">\r\n              @marecchia_news\r\n            </a>\r\n          </p>\r\n        </div>\r\n      </div>\r\n      <Nav />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Hero;\r\n","import React from \"react\";\r\n\r\n/**\r\n * @author\r\n * @function About\r\n **/\r\n\r\nconst About = (props) => {\r\n  return (\r\n    <>\r\n      <h3>About</h3>\r\n      <div className=\"blog-post-text\">\r\n        {\" \"}\r\n        The Marecchia (name after the Italianin river adjacent to the Rubicon)\r\n        is a grassroots journalism initiative founded in Saint Paul by two\r\n        concerned citizens, with a deep appreciation for the first amendment.\r\n      </div>\r\n      <div className=\"blog-post-text\">\r\n        \"What a waste it is to lose one's mind. Or not to have a mind is being\r\n        very wasteful. How true that is.”\r\n      </div>\r\n      <div className=\"blog-post-text\">\r\n        The Marecchia was founded off this one simple principle, presented by\r\n        former Vice President Dan Quayle in 1989. The mind is the most powerful\r\n        tool known to man, and we feel that our upmost responsibility is to put\r\n        it to good use. How true that is.\r\n      </div>\r\n      <div className=\"blog-post-text\">\r\n        People often ask us about our reputability to which we respond with\r\n        these simple words: just trust us.\r\n      </div>\r\n      <div className=\"blog-post-text\">\r\n        We welcome submissions from the community, the Marecchia can be reached\r\n        at <a href=\"mailto:themarecchia@gmail.com\">themarecchia@gmail.com</a>{\" \"}\r\n      </div>\r\n      <div className=\"blog-post-text\">\r\n        <a class=\"disclaimer\" href=\"/#/disclaimer\">\r\n          DISCLAIMER\r\n        </a>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport blogPost from \"../../data/blog.json\";\r\n\r\n/**\r\n * @author\r\n * @function BlogPost\r\n **/\r\n\r\nconst BlogPost = (props) => {\r\n  const [post, setPost] = useState({});\r\n  //reload the content\r\n  const [postId, setPostId] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const postId = props.match.params.postId;\r\n    const post = blogPost.data.find((post) => post.id == postId);\r\n    setPost(post);\r\n    setPostId(postId);\r\n  }, [post, props.match.params.postId]);\r\n\r\n  if (post.blogImage == \"\") return null;\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"blog-post-container\">\r\n        <h3 class=\"my-5\">{post.blogTitle}</h3>\r\n        <h3 class=\"my-4\">{post.author}</h3>\r\n        <div className=\"post-thumb\">\r\n          <span class=\"blog-post-tag\">{post.blogCategory}</span>\r\n          <img\r\n            src={post.blogImage}\r\n            style={{ width: \"100%\" }}\r\n            title={post.imageCredit}\r\n          />\r\n\r\n          {/* <img src={require('../../assets/images/mustang.jpg')} /> */}\r\n        </div>\r\n        <div className=\"blog-post-text\">\r\n          <div>{post.blogText}</div>\r\n          <p className=\"mt-5 text-muted\">\r\n            Posted on: {post.postedOn} by {post.author}\r\n            {\" / \"}\r\n            <a class=\"disclaimer\" href=\"/#/disclaimer\">\r\n              DISCLAIMER\r\n            </a>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BlogPost;\r\n","\r\nimport React, { useState, useEffect } from 'react';\r\nimport blogPost from '../../data/blog.json';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n/**\r\n* @author\r\n* @function Sidebar \r\n**/\r\n\r\nconst Sidebar  = (props) => {\r\n\r\n  const [posts, setPosts] = useState([]);\r\n\r\n  useEffect(()=>{\r\n\r\n    const posts = blogPost.data;\r\n    setPosts(posts);\r\n  }, posts);\r\n\r\n  return(\r\n\r\n    <div>\r\n\r\n{\r\n  posts.map(post => {\r\n\r\n    return(\r\n\r\n     \r\n\r\n\r\n      <div >\r\n\r\n\r\n<img style={{width: \"100%\"}} src={post.blogImage}/>\r\n   \r\n\r\n<NavLink key={post.id} to={`/post/${post.id}`}>  <div className = \"post-title\">{post.blogTitle}</div>  </NavLink>\r\n\r\n\r\n\r\n\r\n       </div>\r\n           \r\n     \r\n\r\n\r\n\r\n\r\n    )\r\n\r\n  })\r\n}\r\n\r\n    </div>\r\n   )\r\n\r\n }\r\n\r\nexport default Sidebar;","import React from 'react'\r\n\r\n\r\nimport BlogPost from '../../components/BlogPost';\r\nimport Sidebar from '../../components/Sidebar';\r\n/**\r\n* @author\r\n* @function Post\r\n**/\r\n\r\nconst Post = (props) => {\r\n\r\n  return(\r\n\r\n<div className=\"row justify-content-between\">\r\n<div class=\"col-md-8 \">\r\n<BlogPost {...props}/>\r\n\r\n\r\n</div>\r\n<div class=\"col-md-offset-2 col-md-2 mt-5\" style={{height:\"50vh\", overflow:\"hidden;\"}}><Sidebar /></div>\r\n\r\n</div>\r\n\r\n   )\r\n\r\n }\r\n\r\nexport default Post","import React, { useState, useEffect } from \"react\";\r\nimport blogPost from \"../../data/blog.json\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\n/**\r\n * @author\r\n * @function AllPosts\r\n **/\r\n\r\nconst AllPosts = (props) => {\r\n  const [posts, setPosts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const posts = blogPost.data;\r\n    setPosts(posts);\r\n  }, posts);\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      {posts.map((post) => {\r\n        return (\r\n          <div className=\"col-md-3\">\r\n            <NavLink key={post.id} to={`/post/${post.id}`}>\r\n              <img\r\n                src={post.blogImage}\r\n                style={{ width: \"100%\", height: \"60.667%\", objectFit: \"cover\" }}\r\n              />\r\n\r\n              <p className=\"lead2\">\r\n                {\" \"}\r\n                <div className=\"post-author2\">\r\n                  <span className={post.blogCategory}>{post.blogCategory}</span>\r\n                  {post.author}\r\n                </div>\r\n                <div className=\"post-title2\">{post.blogTitle}</div>{\" \"}\r\n              </p>\r\n            </NavLink>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AllPosts;\r\n","import data from \"./dan.json\";\r\nimport React, { Component } from \"react\";\r\nclass DailyDan extends Component {\r\n  render() {\r\n    let index = Math.floor(Math.random() * 32);\r\n    let dan = data.data[index];\r\n\r\n    return (\r\n      <div className=\"dan\">\r\n        <h3>The Daily Dan</h3>\r\n        <h3 className=\"blog-post-text\">{dan}</h3>\r\n        <h4 className=\"blog-post-text\">\r\n          - Former Vice President{\" \"}\r\n          <a href=\"https://en.wikipedia.org/wiki/Dan_Quayle\">Dan Quayle</a>\r\n        </h4>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DailyDan;\r\n","import React, { Component } from \"react\";\r\nclass Election extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"election\">\r\n        <h3>Live Election Coverage (starting April 1)</h3>\r\n        <img\r\n          src={require(\"./DOS.png\")}\r\n          width=\"50%\"\r\n          style={{ display: \"block\" }}\r\n          alt=\"Can't Load Image\"\r\n        ></img>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Election;\r\n","import React, { Component } from \"react\";\r\nclass Mardle extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"dan\">\r\n        <iframe\r\n          src=\"https://henryburkhardt.github.io/spartle/#/mardle\"\r\n          className=\"iframe\"\r\n        ></iframe>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Mardle;\r\n","import React, { Component } from \"react\";\r\nimport monoVid from \"./monoTracker.mp4\";\r\nclass MonoTracker extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"election\">\r\n        <h3>Mono Tracker</h3>\r\n        <h6>\r\n          The Marecchia recently aquired state of the art technology allowing us\r\n          to indentify and track students on campus infected with Mono.\r\n        </h6>\r\n        <video className=\"videoTag\" autoPlay loop muted>\r\n          <source src={monoVid} type=\"video/mp4\" />\r\n        </video>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MonoTracker;\r\n","import React from \"react\";\r\n\r\n/**\r\n * @author\r\n * @function About\r\n **/\r\n\r\nconst Disclaimer = (props) => {\r\n  return (\r\n    <>\r\n      <h3>Disclaimer</h3>\r\n      <div className=\"blog-post-text\">\r\n        The Marecchia is a satirical publication, all articles are fictional and\r\n        any representation of real events is purely coincidental. Any harm\r\n        caused by the publication is unintentional. The Marecchia is in no way\r\n        officially affiliated with St. Paul Acadmey and nothing published is\r\n        meant as defamatory to St. Paul Academy or any other institution or\r\n        individual. If you feel an article on the site is problematic please\r\n        contact us (themarecchia@gmail.com). Humor is our primary goal, and our\r\n        intent is not to offend or defame.{\" \"}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Disclaimer;\r\n","import React from \"react\";\r\n\r\nimport AllPosts from \"../components/AllPosts\";\r\nconst MainPage = () => {\r\n  return (\r\n    <div>\r\n      {/* <h3 className=\"my-3\">All Posts</h3> */}\r\n      <AllPosts />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainPage;\r\n","import React from \"react\";\r\n\r\n\r\nconst PageNotFound = () => {\r\n    return(\r\n\r\n        <div>\r\n            <h1>404</h1>\r\n            <p className=\"lead\">Page not found</p>\r\n            <a href=\"/\">&larr; Επιστροφή</a>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport  default PageNotFound;","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport Header from \"./components/Header\";\r\nimport Hero from \"./components/Hero\";\r\nimport About from \"./containers/About\";\r\nimport Post from \"./containers/Post\";\r\nimport Opinion from \"./components/Opinion\";\r\nimport AllPosts from \"./components/AllPosts\";\r\nimport DailyDan from \"./components/DailyDan\";\r\nimport Election from \"./components/Election\";\r\nimport Mardle from \"./components/Mardle\";\r\nimport MonoTracker from \"./components/MonoTracker\";\r\nimport Disclaimer from \"./components/Disclaimer\";\r\nimport {\r\n  HashRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\n\r\nimport MainPage from \"./pages\";\r\nimport PageNotFound from \"./pages/404\";\r\nimport ReactGA from \"react-ga\";\r\nReactGA.initialize(\"UA-132829761-4\");\r\n\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    let contents;\r\n    contents = window.location.pathname + window.location.search;\r\n    ReactGA.pageview(contents);\r\n  }\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <div className=\"App\">\r\n          <Hero />\r\n\r\n          <div className=\"container\">\r\n            <Switch>\r\n              <Route exact path=\"/\" component={MainPage} />\r\n              <Route path=\"/about\" component={About} />\r\n              <Route exact path=\"/post/:postId\" component={Post} />\r\n              <Route exact path=\"/opinion\" component={About} />\r\n              <Route exact path=\"/feature\" component={About} />\r\n              <Route exact path=\"/monotracker\" component={MonoTracker} />\r\n              <Route exact path=\"/dailydan\" component={DailyDan} />\r\n              <Route exact path=\"/electioncoverage\" component={Election} />\r\n              <Route exact path=\"/mardle\" component={Mardle} />\r\n              <Route exact path=\"/disclaimer\" component={Disclaimer} />\r\n\r\n              <Route component={PageNotFound} />\r\n            </Switch>\r\n          </div>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}